// ============================================ //
// ============== HELPER CLASSES ============== //
// ============================================ //

.group {
    @extend .clearfix;
}

// image replacement
.ir {
    @include ir();
}

// hide from both screenreaders and browsers: h5bp.com/u
.hidden {
    @extend .hide;
}

// hide only visually, but have it available for screenreaders: h5bp.com/v
.visuallyhidden {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    border: 0;
}

// allow the element to be focusable when navigated to via the keyboard: h5bp.com/p
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    position: static;
    overflow: visible;
    clip: auto;
    margin: 0;
    width: auto;
    height: auto;
}


// Container classes, container.container--large
.container {
	@include xy-grid-container;

	@each $breakpoint-name, $breakpoint in $breakpoints {
		&--#{$breakpoint-name} {max-width: $breakpoint}
	}
	// @include m(full) {max-width: 100%};
	&--full {@include max-width-100;}
}

// Classes such as .small-gutterY or .large-gutterY
@include each-breakpoint(gutterY) {
  // Add top/bottom gutters
  @include xy-gutters($gutter-position: top bottom);
}

// Classes such as .small-gutterX or .large-gutterX
@include each-breakpoint(gutterX) {
  // Adds left/right gutters
  @include xy-gutters($gutter-position: left right);
}

// Classes such as .small-gutterXY or .large-gutterXY
@include each-breakpoint(gutterXY) {
  // Add top/bottom/left/right gutters
  @include xy-gutters($gutter-position: left right top bottom);
}

// Classes such as .small-gridY or .large-gridY
@include each-breakpoint(gridY) {
  // Column flex
  flex-flow: column nowrap;
}

// Classes such as .small-gridX or .large-gridX
@include each-breakpoint(gridX) {
  // Row flex
  flex-flow: row wrap;
}
