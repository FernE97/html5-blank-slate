// ================================================= //
//  CONTAINS BASIC SECTION LAYOUT SETUP AND SIZING,  //
//  ALONG WITH THE BACKGROUND IMAGES AND OVERLAYS    //
// ================================================= //

.layout,
.splitLeft,
.splitRight {
  position: relative;

  // Background images/overlays
  &:before,
  &:after {
    position: absolute;
    content: " ";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
    background-size: cover;
    background-position: center center;
  }

  // Background image
  &:before {
    // Lowest of the other values, will always be bottom layer
    z-index: -4;
  }

  // Background overlay
  &:after {
    // Appear over the background image as a colored overlay
    z-index: -2;
  }
}

.content,
.leftContent,
.rightContent {
    position: relative;

    // Text background overlay
    &:before {
      content: "";
      display: block;
      position: absolute;
      min-width: 100%;
      height: 100%;
      // Topmost of the backgrounds/overlays
      z-index: -1;
      left: 0;
  }
}

// All non-banner and non-split headings <h2>
.heading {
  @include dynamicCalc($headingSizes, 'font-size');
}

// Body text
.text {
  @include dynamicCalc($bodyTextSizes, 'font-size');
}

// Sets max width for non-split layouts, which leaves left/right gutters.
// Split layouts have outer padding that is equal to those gutters.
// It is a workaround to support full split section background images, and left/right background images,
// while still keeping the split content aligned with the other layouts.
.layoutWrapper {
  @include dynamic($layoutWrapperMaxWidth, 'max-width');
  margin: 0 auto;

  &.--center {
    margin-left: auto !important;
    margin-right: auto !important;
    text-align: center !important;
  }

  &.--left, &.--right {
    @include breakpoint(mediumish) {
      @include dynamic($alignedContentWidth, 'width');

      .textContent {
        @include dynamicCalc($splitInnerGutter, 'padding');
      }
    }
  }

  &.--left {
    @include breakpoint(mediumish) {
      margin-right: auto !important;
      @include dynamic($alignedOutterGutter, 'margin-left');
    }
  }

  &.--right {
    @include breakpoint(mediumish) {
      margin-left: auto !important;
      @include dynamic($alignedOutterGutter, 'margin-right');
    }
  }
}



